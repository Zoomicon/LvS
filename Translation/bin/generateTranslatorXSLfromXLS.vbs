'Description: Generates .XSL stylesheet to translate a .RESX file given an .XLS file with translation strings
'Author: G.Birbilis (birbilis@kagi.com) / Zoomicon (www.zoomicon.com)
'Version: 20080426

const COL_KEY = 1
const COL_OLD_VALUE = 2
const COL_NEW_VALUE = 3

'--------------------------

Const ForWriting=2
Const TriStateTrue=-1 'Unicode

'--------------

sub writeResxComment(file)
 file.writeline("  <xsl:comment>")
 file.writeline("    Microsoft ResX Schema")
 file.writeline("")
 file.writeline("    Version 2.0")
 file.writeline("")    
 file.writeline("    The primary goals of this format is to allow a simple XML format")
 file.writeline("    that is mostly human readable. The generation and parsing of the")
 file.writeline("    various data types are done through the TypeConverter classes")
 file.writeline("    associated with the data types.")
 file.writeline("")   
 file.writeline("    Example:")
 file.writeline("")   
 file.writeline("    ... ado.net/XML headers &amp; schema ...")
 file.writeline("    <resheader name=""resmimetype"">text/microsoft-resx</resheader>")
 file.writeline("    <resheader name=""version"">2.0</resheader>")
 file.writeline("    <resheader name=""reader"">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>")
 file.writeline("    <resheader name=""writer"">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>")
 file.writeline("    <data name=""Name1""><value>this is my long string</value><comment>this is a comment</comment></data>")
 file.writeline("    <data name=""Color1"" type=""System.Drawing.Color, System.Drawing"">Blue</data>")
 file.writeline("    <data name=""Bitmap1"" mimetype=""application/x-microsoft.net.object.binary.base64"">")
 file.writeline("        <value>[base64 mime encoded serialized .NET Framework object]</value>")
 file.writeline("    </data>")
 file.writeline("    <data name=""Icon1"" type=""System.Drawing.Icon, System.Drawing"" mimetype=""application/x-microsoft.net.object.bytearray.base64"">")
 file.writeline("        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>")
 file.writeline("        <comment>This is a comment</comment>")
 file.writeline("    </data>")
 file.writeline("")               
 file.writeline("    There are any number of ""resheader"" rows that contain simple") 
 file.writeline("    name/value pairs.")
 file.writeline("")   
 file.writeline("    Each data row contains a name, and value. The row also contains a")
 file.writeline("    type or mimetype. Type corresponds to a .NET class that support")
 file.writeline("    text/value conversion through the TypeConverter architecture.")
 file.writeline("    Classes that don't support this are serialized and stored with the")
 file.writeline("    mimetype set.")
 file.writeline("")    
 file.writeline("    The mimetype is used for serialized objects, and tells the")
 file.writeline("    ResXResourceReader how to depersist the object. This is currently not")
 file.writeline("    extensible. For a given mimetype the value must be set accordingly:")
 file.writeline("")    
 file.writeline("    Note - application/x-microsoft.net.object.binary.base64 is the format")
 file.writeline("    that the ResXResourceWriter will generate, however the reader can")
 file.writeline("    read any of the formats listed below.")
 file.writeline("")   
 file.writeline("    mimetype: application/x-microsoft.net.object.binary.base64")
 file.writeline("    value   : The object must be serialized with")
 file.writeline("            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter")
 file.writeline("            : and then encoded with base64 encoding.")
 file.writeline("")   
 file.writeline("    mimetype: application/x-microsoft.net.object.soap.base64")
 file.writeline("    value   : The object must be serialized with")
 file.writeline("            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter")
 file.writeline("            : and then encoded with base64 encoding.")
 file.writeline("")
 file.writeline("    mimetype: application/x-microsoft.net.object.bytearray.base64")
 file.writeline("    value   : The object must be serialized into a byte array")
 file.writeline("            : using a System.ComponentModel.TypeConverter")
 file.writeline("            : and then encoded with base64 encoding.")
 file.writeline("   </xsl:comment>")
end sub

sub writelineTranslationHeader(file)
 file.writeline("<?xml version='1.0' encoding='Unicode'?>")
 file.writeline("<!--")
 file.writeline("Description: autogenerated XML stylesheet to translate .RESX file")
 file.writeline("Author: George Birbilis / Zoomicon (www.zoomicon.com)")
 file.writeline("Version: 20080118")
 file.writeline("-->")
 file.writeline("")
 file.writeline("<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='2.0'>")
 file.writeline("<xsl:output method='xml' version='1.0' encoding='UTF-8' indent='yes'/>")
 file.writeline("")
 file.writeline("<xsl:template name='root' match='/root'>")
 file.writeline("<root>")
 'writeResxComment(file) 'commenting this out for speed, since noemptydata.xsl will add it too
 file.writeline(" <xsl:apply-templates/>")
 file.writeline("")
 file.writeline("</root>")
 file.writeline("</xsl:template>")
 file.writeline("")
 file.writeline("<xsl:template match='data'>")
 file.writeline(" <data>")
 file.writeline("  <xsl:copy-of select='@*'/>")
 file.writeline("  <value>")

end sub

sub writelineTranslationTemplate(file,key,oldvalue,newvalue)
 oldvalue=replace(oldvalue, "&", "&amp;")
 newvalue=replace(newvalue, "&", "&amp;")

 oldvalue=replace(oldvalue, "'", "&apos;")
 newvalue=replace(newvalue, "'", "&apos;")

 oldvalue=replace(oldvalue, """", "&quot;")
 newvalue=replace(newvalue, """", "&quot;")
 
 file.writeline("<xsl:if test='@name=""" & key & """ or value/text()=""" & oldvalue & """'>" & newvalue & "</xsl:if>")
end sub

sub writelineTranslationFooter(file)
 file.writeline("  </value>")
 file.writeline(" </data>")
 file.writeline("</xsl:template>")
 file.writeline("")
 file.writeline("<xsl:template match='*'>")
 file.writeline(" <xsl:copy-of select='.'/>")
 file.writeline("</xsl:template>")
 file.writeline("") 
 file.writeline("</xsl:stylesheet>")
end sub


'--------------

'On Error Resume Next

dim excel
set excel = wscript.CreateObject("Excel.Application")

dim workbook
set workbook = excel.Workbooks.Open(wscript.arguments(0))

dim sheet
set sheet = workbook.worksheets.Item(1)

dim fso
set fso = wscript.CreateObject("Scripting.FileSystemObject")

dim file
set file = fso.OpenTextFile(wscript.arguments(1),ForWriting,True,TristateTrue)
if err.number>0 then 
 wscript.echo err.description
 wscript.quit
end if

writelineTranslationHeader file

dim maxrow, row
maxrow = sheet.UsedRange.Rows.Count
for row = 2 to maxrow
 writelineTranslationTemplate file, sheet.Cells(row,COL_KEY), sheet.Cells(row,COL_OLD_VALUE), sheet.Cells(row,COL_NEW_VALUE)
next

writelineTranslationFooter file

file.close 
set file = Nothing
set fso = Nothing 

set sheet = Nothing

workbook.Close
set workbook = Nothing

excel.quit
set excel = Nothing
